<launch>

  <!-- Args -->

  <arg name="scan_topic"  default="scan" />
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <arg name="base_frame"  default="base_footprint"/>
  <arg name="odom_frame"  default="odom"/>
  <arg name="map_file" default="$(find path_controller)/maps/map.yaml"/>

  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="-0.7"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>
  
  <arg name="initial_pose_x" default="-0.7"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>

  
  <!-- Spawn do robo -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find path_controller)/world/scenario.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>  


  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />


  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)"/>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"/>
  

  <!-- Implementacao AMCL (Localizacao) -->

  <node pkg="amcl" type="amcl" name="amcl">
    <param name="min_particles"             value="500"/>
    <param name="max_particles"             value="3000"/>
    <param name="kld_err"                   value="0.02"/>
    <param name="update_min_d"              value="0.20"/>
    <param name="update_min_a"              value="0.20"/>
    <param name="resample_interval"         value="1"/>
    <param name="transform_tolerance"       value="0.5"/>
    <param name="recovery_alpha_slow"       value="0.00"/>
    <param name="recovery_alpha_fast"       value="0.00"/>
    <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
    <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
    <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
    <param name="gui_publish_rate"          value="50.0"/>

    <remap from="scan"                      to="$(arg scan_topic)"/>
    <param name="laser_max_range"           value="3.5"/>
    <param name="laser_max_beams"           value="180"/>
    <param name="laser_z_hit"               value="0.5"/>
    <param name="laser_z_short"             value="0.05"/>
    <param name="laser_z_max"               value="0.05"/>
    <param name="laser_z_rand"              value="0.5"/>
    <param name="laser_sigma_hit"           value="0.2"/>
    <param name="laser_lambda_short"        value="0.1"/>
    <param name="laser_likelihood_max_dist" value="2.0"/>
    <param name="laser_model_type"          value="likelihood_field"/>

    <param name="odom_model_type"           value="diff"/>
    <param name="odom_alpha1"               value="0.1"/>
    <param name="odom_alpha2"               value="0.1"/>
    <param name="odom_alpha3"               value="0.1"/>
    <param name="odom_alpha4"               value="0.1"/>
    <param name="odom_frame_id"             value="odom"/>
    <param name="base_frame_id"             value="base_footprint"/>
  </node>

  <!-- Navegacao -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find path_controller)/maps/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
    <rosparam file="$(find path_controller)/maps/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find path_controller)/maps/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find path_controller)/maps/global_costmap_params.yaml" command="load" /> 
    <rosparam file="$(find path_controller)/maps/dwa_local_planner_params.yaml" command="load" />
    <rosparam file="$(find path_controller)/maps/move_base_params.yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
 </node>


  <!-- Rviz -->
  
  <node pkg="rviz" type="rviz" name="rviz" required="true" args="-d $(find path_controller)/rviz/nav.rviz"/>

  <!-- Scripts -->

	<node pkg="path_controller" type="path_controller.py" name="path_controller" output="screen" />
	<node pkg="path_controller" type="combination_obstacle_1.py" name="combination_obstacle_1" output="screen" />
  <node pkg="path_controller" type="combination_obstacle_2.py" name="combination_obstacle_2" output="screen" />

</launch>
